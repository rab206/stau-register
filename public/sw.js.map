{"version":3,"sources":["sw.js"],"names":["urlsToPrefetch","importScripts","version","staticCacheName","self","oninstall","skipWaiting","event","waitUntil","caches","open","then","cache","addAll","expectedCaches","onactivate","clients","claim","keys","Promise","all","cacheNames","map","indexOf","cacheName","delete","onfetch","URL","request","url","hostname","respondWith","match","response","fetch"],"mappings":"AAAA,aAGA,GAAIA,2RAAJ,CAYAC,cAAc,iCAAd,C,CAEA,GAAIC,SAAU,KAAd,CACIC,gBAAkB,mBADtB,CAGAC,KAAKC,SAAL,CAAiB,WAAgB,CAC/BD,KAAKE,WAAL,EAD+B,CAG/BC,EAAMC,SAAN,CACEC,OAAOC,IAAP,CAAYP,eAAZ,EAA6BQ,IAA7B,CAAkC,WAAgB,CAChD,MAAOC,GAAMC,MAAN,CAAab,cAAb,CACR,CAFD,CADF,CAKD,C,CAED,GAAIc,gBAAiB,CACnBX,eADmB,CAArB,CAIAC,KAAKW,UAAL,CAAkB,WAAgB,CAC5BX,KAAKY,OAAL,EAAgBA,QAAQC,KADI,EAE9BD,QAAQC,KAAR,EAF8B,CAIhCV,EAAMC,SAAN,CACEC,OAAOS,IAAP,GAAcP,IAAd,CAAmB,WAAqB,CACtC,MAAOQ,SAAQC,GAAR,CACLC,EAAWC,GAAX,CAAe,WAAoB,CACjC,GAAyC,CAAC,CAAtC,iBAAeC,OAAf,CAAuBC,CAAvB,CAAJ,CACE,MAAOf,QAAOgB,MAAP,CAAcD,CAAd,CAEV,CAJD,CADK,CAOR,CARD,CADF,CAWD,C,CAEDpB,KAAKsB,OAAL,CAAe,WAAgB,CAC7B,GAAI,GAAa,GAAIC,IAAJ,CAAQpB,EAAMqB,OAAN,CAAcC,GAAtB,CAAjB,CAC4B,yBAAxB,KAAWC,QAFc,EAK3BvB,EAAMwB,WAAN,CAGEtB,OAAOuB,KAAP,CAAazB,EAAMqB,OAAnB,EAA4BjB,IAA5B,CAAiC,WAAmB,CAIlD,MAAOsB,IAAYC,MAAM3B,EAAMqB,OAAZ,CACpB,CALD,CAHF,CAWH,C","file":"sw.js","sourcesContent":["'use strict';\n/* global Request, Response, caches, URL, fetch */\n\nvar urlsToPrefetch = [\n    '/'\n    ,'/index.html'\n    , '/index.js'\n    , '/datalist-polyfill.js'\n    , '/tachyons.css'\n    , 'https://fonts.gstatic.com/s/roboto/v15/CWB0XYA8bzo0kSThX0UTuA.woff2'\n    , 'https://fonts.gstatic.com/s/roboto/v15/d-6IYplOFocCacKzxwXSOFtXRa8TVwTICgirnJhmVJw.woff2'\n    , '/eagle_logo_s.png'\n    , '/favicon.ico'\n];\n\nimportScripts('serviceworker-cache-polyfill.js');\n\nvar version = 'v15';\nvar staticCacheName = 'stau-register-v15';\n\nself.oninstall = function(event) {\n  self.skipWaiting();\n\n  event.waitUntil(\n    caches.open(staticCacheName).then(function(cache) {\n      return cache.addAll(urlsToPrefetch);\n    })\n  );\n};\n\nvar expectedCaches = [\n  staticCacheName,\n];\n\nself.onactivate = function(event) {\n  if (self.clients && clients.claim) {\n    clients.claim();\n  }\n  event.waitUntil(\n    caches.keys().then(function(cacheNames) {\n      return Promise.all(\n        cacheNames.map(function(cacheName) {\n          if (expectedCaches.indexOf(cacheName) == -1) {\n            return caches.delete(cacheName);\n          }\n        })\n      );\n    })\n  );\n};\n\nself.onfetch = function(event) {\n  var requestURL = new URL(event.request.url);\n  if (requestURL.hostname === \"spreadsheets.google.com\") {\n    \n  } else {\n    event.respondWith(\n      // First we look for something in the caches that\n      // matches the request\n      caches.match(event.request).then(function(response) {\n        // If we get something, we return it, otherwise\n        // it's null, and we'll pass the request to\n        // fetch, which will use the network.\n        return response || fetch(event.request);\n      })\n    );\n  }\n};\n\n// self.onfetch = function(event) {\n//   var requestURL = new URL(event.request.url);\n\n//   if (requestURL.hostname == 'api.flickr.com') {\n//     event.respondWith(flickrAPIResponse(event.request));\n//   }\n//   else if (/\\.staticflickr\\.com$/.test(requestURL.hostname)) {\n//     event.respondWith(flickrImageResponse(event.request));\n//   }\n//   else {\n//     event.respondWith(\n//       caches.match(event.request, {\n//         ignoreVary: true\n//       })\n//     );\n//   }\n// };"]}