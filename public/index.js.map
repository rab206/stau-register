{"version":3,"names":[],"mappings":"","sources":["index.js"],"sourcesContent":["'use strict';\n\nvar peopleMap = {}; // object of all people, name and balance\nvar peopleList = [];\nvar attendeeList = []; // list of all attendees\nvar peopleField = document.getElementById('people'); // field where person's name is entered\nvar dataList = document.getElementById('peopleList'); // list of people to show in drop down\nvar addedPeople = document.getElementById('addedPeople'); // table to show added people\nvar totalField = document.getElementById('total');\n\n// initialise the date field to today\ndocument.getElementById('date').valueAsDate = new Date();\n\n// fetch the data from google spreadsheets\nvar xhr = new XMLHttpRequest();\nxhr.open('GET', 'https://spreadsheets.google.com/feeds/list/1j9z1tQwSwxclM-ucThVbraR_JaQcvnwnPoDGFLGUFfU/2/public/values?alt=json');\nxhr.onload = function() {\n  if (xhr.status === 200) {\n    onComplete(JSON.parse(xhr.response));\n  }\n  else {\n    alert('Request failed.  Returned status of ' + xhr.status);\n  }\n};\nxhr.send();\n\n// callback when google sheet loads\nfunction onComplete(data) {\n  // show the last updated date\n  var lastUpdated = new Date(data.feed.updated.$t);\n  document.getElementById(\"lastUpdated\").textContent = lastUpdated.toDateString();\n\n  // only keep the row if the name is not empty\n  var people = data.feed.entry.filter(p => {\n    return p.gsx$firstname.$t.trim() ? true : false;\n  });\n  // extract the data we want (full name and balance) and discard the rest\n  people = people.map(p => {\n    var name = p.gsx$firstname.$t.trim() + \" \" + p.gsx$surname.$t.trim();\n    var newP = {\n      name,\n      balance: p.gsx$balance.$t\n    };\n    peopleMap[name] = newP;\n    return newP;\n  });\n\n  // sort the names alphabetically\n  people.sort(function compare(a, b) {\n    var nameA = a.name.toUpperCase();\n    var nameB = b.name.toUpperCase();\n    if (nameA < nameB) {\n      return -1;\n    }\n    if (nameA > nameB) {\n      return 1;\n    }\n    return 0;\n  });\n  var options = '<!--[if lte IE 9]><select data-datalist=\"peopleList\"><![endif]-->'; // populate list of options\n  people.map(p => {\n    peopleList.push(p.name);\n    options += `<option value=\"${p.name}\">`;\n  });\n  options += \"<!--[if lte IE 9]></select><![endif]-->\";\n  dataList.innerHTML = options;\n  peopleField.placeholder = \"type name...\";\n\n  var datalistSupported = !!(document.createElement('datalist') && window.HTMLDataListElement);\n\n  if (!datalistSupported) {\n    var polyfill = document.createElement(\"script\");\n    polyfill.type = \"text/javascript\";\n    polyfill.id = \"polyfill\";\n    polyfill.src = \"datalist-polyfill.js\";\n    document.body.appendChild(polyfill);\n    var style = '<style>.datalist-polyfill{list-style:none;display:none;background:#fff;box-shadow:0 2px 2px #999;position:absolute;left:0;top:0;margin:0;padding:0;max-height:300px;overflow-y:auto}.datalist-polyfill:empty{display:none!important}.datalist-polyfill>li{padding:3px;font:13px \"Lucida Grande\",Sans-Serif}.datalist-polyfill__active{background:#3875d7;color:#fff}</style>';\n    document.body.insertAdjacentHTML('beforeend', style);\n  }\n}\n\n// prevent enter key submit of the form\ndocument.getElementById('form').onkeypress = (e) => {\n  if (e.keyCode == 13) {\n    e.preventDefault();\n  }\n};\n\n// capitalize all words\nfunction capitalize(name) {\n  if (name) {\n    var words = name.split(' ');\n    name = \"\";\n    words.map((w) => {\n      name += w[0].toUpperCase() + w.slice(1) + \" \";\n    });\n    name = name.trim();\n  }\n  return name;\n}\n\n// add the current person to the attendee list\ndocument.getElementById('addPerson').onclick = addPerson;\n\n// if the field value matches a person's name in the list\n// then add the person immediately\n// this works on clicking on a element in the list or just typing the full name\npeopleField.oninput = () => {\n  var val = peopleField.value;\n  val = capitalize(val);\n  if (peopleList.includes(val)) {\n    addPerson();\n  }\n};\n\n// add a person to the table and to the list of attendees\nfunction addPerson() {\n  var name = capitalize(peopleField.value);\n  // if they're not already on the list add them\n  if (name && !attendeeList.includes(name)) {\n    // if the person exists in the spreadsheet we show their balance, if not we show \"New person\"\n    var balance = \"New person\";\n\n    // highlight the people with a negative balance\n    var rowClass = \"\";\n    if (peopleMap[name]) {\n      balance = peopleMap[name].balance;\n      balance = \"Â£\" + balance;\n      if (balance.includes('(')) {\n        rowClass = \"red\";\n        balance = \"-&pound;\" + balance.substring(2, balance.length - 1);\n      }\n    }\n    attendeeList.push(name);\n\n    // sort the attendees\n    attendeeList.sort();\n\n    // keep the table sorted by inserting the user in the right place in the table\n    var index = attendeeList.indexOf(name);\n    if (index > 0) {\n      document.getElementById(attendeeList[index - 1]).insertAdjacentHTML(\"afterend\",\n        `<tr id=\"${name}\" class=\"stripe-dark ${rowClass}\">\n          <td class=\"pa3\">${name}</td>\n          <td class=\"pa3\">${balance}</td>\n          <td class=\"pa3\"><input onClick=\"removePerson(this, '${name}')\" class=\"b ph3 pv2 input-reset ba b--black bg-white grow pointer f6\" type=\"button\" value=\"Remove\"></td>\n        </tr>`);\n    }\n    else {\n      addedPeople.insertAdjacentHTML(\"afterbegin\",\n        `<tr id=\"${name}\" class=\"stripe-dark ${rowClass}\">\n          <td class=\"pa3\">${name}</td>\n          <td class=\"pa3\">${balance}</td>\n          <td class=\"pa3\"><input onClick=\"removePerson(this, '${name}')\" class=\"b ph3 pv2 input-reset ba b--black bg-white grow pointer f6\" type=\"button\" value=\"Remove\"></td>\n        </tr>`);\n    }\n    // add the person to the table\n    totalField.textContent = attendeeList.length;\n  }\n  // reset the search field\n  peopleField.value = \"\";\n  peopleField.focus();\n}\n\n// remove an attendee\n// element is the button clicked on, name is the name of the person\nfunction removePerson(element, name) {\n  // delete from table\n  element.parentElement.parentElement.remove();\n  // delete from attendee list\n  attendeeList.splice(attendeeList.indexOf(name), 1);\n  totalField.textContent = attendeeList.length;\n}\n\n// on submit prevent page submit and open email app instead\ndocument.getElementById('form').addEventListener(\"submit\", (e) => {\n  // prevent page submit\n  e.preventDefault();\n\n  // construct the mail to request\n  var email = 'treasurer@stalbansultimate.co.uk';\n  var date = document.getElementById('date').value;\n  var comment = document.getElementById('comment').value;\n  var subject = `Register for  ${date}`;\n  var emailBody =\n    `Hi Treasurer,\\r\\n\nHere is the register for ${date}.\\r\\n\n\\r\\n\nComment: ${comment}\\r\\n\n\\r\\n\nRegister;\n${attendeeList.join('\\r\\n')}\\r\\n\n\\r\\n\nThanks`;\n  window.location.href = \"mailto:\" + email + \"?subject=\" + subject + \"&body=\" + encodeURIComponent(emailBody);\n  // show the warning that email has been opened\n  document.getElementById('warning').classList.remove('dn');\n});\n/* global navigator */\n// add service worker so requests are cached offline and we get add to homescreen functionality\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker.register('/sw.js').then(function(registration) {\n      // Registration was successful\n      console.log('ServiceWorker registration successful with scope: ', registration.scope);\n    }).catch(function(err) {\n      // registration failed :(\n      console.log('ServiceWorker registration failed: ', err);\n    });\n  });\n}\n"],"file":"index.js"}